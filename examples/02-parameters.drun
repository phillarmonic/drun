# Parameters and Variables
# Shows how to use parameters, defaults, and variables in semantic syntax

version: 2.0

task "greet" means "Greet someone by name":
	requires $name
	given $title defaults to "friend"

	info "Hello, {$title} {$name}! Nice to meet you. ðŸ˜Š"

task "deploy app" means "Deploy application to environment":
	requires $environment from ["dev", "staging", "production"]
	given $version defaults to "{current git commit}"
	given $replicas defaults to "3"

	step "Deploying to {$environment}"
	info "Version: {$version}"
	info "Replicas: {$replicas}"

	if environment is "production":
		warn "Deploying to production - please confirm!"
		info "Production deployment requires $manual confirmation"

	success "Deployment to {$environment} completed!"

task "backup files" means "Backup files with timestamp":
	requires $source_path
	given $backup_name defaults to "backup-2024-01-01"

	step "Creating backup: {$backup_name}"
	info "Source exists: {file exists($source_path)}"

	create dir "backups"
	copy {$source_path} to "backups/{$backup_name}"
	success "Backup created: backups/{$backup_name}"

task "process list" means "Process a list of items":
	accepts $items as list of strings
	given $parallel defaults to "false"

	if parallel is "true":
		info "Processing items in parallel"
		for each item in items in parallel:
			info "Processing: {item}"
	else:
		info "Processing items sequentially"
		for each item in items:
			step "Processing: {item}"
			info "Completed: {item}"

	success "All items processed!"

task "build docker" means "Build docker images with defaults":
	requires $image from ["base", "worker", "dev", "all"]
	requires $dest from ["local", "remote"]
	requires $cache from ["yes", "no"] defaults to "no"
	
	when $dest is "local":
		info "Building for local use. Will use the OS's architecture."
	
	when $dest is "remote":
		info "Building for remote use. This will use buildx."
	
	info "Building image: {$image}"
	info "Destination: {$dest}"
	info "Cache enabled: {$cache}"

task "deploy service" means "Deploy with required parameters that have defaults":
	requires $environment from ["dev", "staging", "production"] defaults to "dev"
	requires $replicas from ["1", "2", "3", "5"] defaults to "1"
	
	info "Deploying to environment: {$environment}"
	info "Number of replicas: {$replicas}"
	success "Deployment complete!"
