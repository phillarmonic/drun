version: 2.0

task "error demo" means "Demonstrate error handling capabilities":
  info "🚀 Starting error handling demonstration"
  
  info "File exists: {file exists(nonexistent.txt)}"
  warn "⚠️  File does not exist, but continuing..."
  info "✅ Handled missing file gracefully"
  
  info "🔄 Testing ignore functionality"
  ignore
  info "✅ Ignore executed successfully"
  
  success "Error handling demo completed!"

task "throw demo" means "Demonstrate throw functionality":
  given $should_fail as boolean defaults to "false"
  
  info "🚀 Starting throw demonstration"
  
  if should_fail is "true":
    warn "⚠️  About to throw an error as requested"
    throw "This is a custom error thrown by user request"
  else:
    info "✅ No error thrown, continuing normally"
  
  success "Throw demo completed successfully!"

task "file error handling" means "Handle file operation errors":
  info "🔄 Testing file operations with error handling"
  
  # File operations would go here (create, write, delete)
  info "✅ File operations completed successfully"
  info "🧹 Cleanup completed"
  
  success "File error handling completed!"

task "conditional errors" means "Conditional error throwing":
  requires $environment as string from ["dev", "staging", "production"]
  given $strict_mode as boolean defaults to "false"
  
  info "🌍 Environment: {environment}"
  info "🔒 Strict mode: {strict_mode}"
  
  if environment is "production":
    if strict_mode is "true":
      warn "⚠️  Production environment with strict mode enabled"
      info "✅ All production checks passed"
    else:
      warn "⚠️  Production environment without strict mode"
      throw "Strict mode is required in production environment"
  
  if environment is "dev":
    info "🔧 Development environment - all checks skipped"
  
  if environment is "staging":
    info "🧪 Staging environment - running basic checks"
  
  success "Conditional error handling completed!"

