version: 2.0

task "showcase" means "Comprehensive feature showcase":
  requires project_name
  given environment defaults to "dev" from ["dev", "staging", "production"]
  given run_tests defaults to "true"
  given services defaults to "api,web,worker"
  
  info "🚀 Welcome to drun v2 comprehensive showcase!"
  step "Project: {project_name}"
  step "Environment: {environment}"
  
  # Parameter validation and interpolation
  when environment is "production":
    warn "⚠️  PRODUCTION DEPLOYMENT - Extra precautions enabled!"
    step "Creating production backup"
    step "Enabling monitoring alerts"
    step "Notifying deployment team"
  
  # Conditional logic with if/else
  if run_tests is "true":
    step "🧪 Running comprehensive test suite"
    info "✅ Unit tests passed"
    info "✅ Integration tests passed"
    info "✅ End-to-end tests passed"
    success "All tests completed successfully!"
  else:
    warn "⚠️  Skipping tests - proceeding with caution"
  
  # Loop processing with variable interpolation
  step "🔄 Processing services: {services}"
  for each service in services:
    step "Processing service: {service}"
    info "✅ Service {service} configured for {environment}"
    
    when environment is "production":
      step "Applying production settings for {service}"
      info "🔒 Security hardening applied to {service}"
  
  # Final deployment steps
  step "🚀 Deploying {project_name} to {environment}"
  info "📦 All services deployed successfully"
  
  when environment is "production":
    step "🔍 Running production health checks"
    info "💚 All systems operational"
    step "📊 Updating deployment metrics"
  
  success "🎉 {project_name} deployment to {environment} completed!"
  info "🌟 drun v2 showcase completed - all features demonstrated!"

task "quick test" means "Quick feature test":
  given feature defaults to "basic"
  
  step "Testing feature: {feature}"
  
  when feature is "basic":
    info "Running basic feature test"
  
  when feature is "advanced":
    info "Running advanced feature test"
    step "Complex processing enabled"
  
  success "Feature test completed!"

task "batch process" means "Batch processing demonstration":
  accepts items as list of strings
  given parallel defaults to "false"
  
  step "Starting batch processing"
  
  if parallel is "true":
    info "🚀 Processing items in parallel mode"
  else:
    info "📋 Processing items sequentially"
  
  for each item in items:
    step "Processing: {item}"
    
    when item is "special":
      warn "Special item detected - applying custom logic"
      step "Custom processing for special item"
    
    info "✅ Completed: {item}"
  
  success "Batch processing completed!"
