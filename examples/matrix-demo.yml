# Matrix Execution Demo
# Shows how matrix builds work across multiple configurations
version: 1.0

env:
  PROJECT_NAME: "matrix-demo"

recipes:
  # Simple matrix example
  test-matrix:
    help: "Run tests across multiple configurations"
    matrix:
      os: ["ubuntu", "macos", "windows"]
      version: ["16", "18", "20"]
    run: |
      {{ step "Testing on {{ .matrix_os }} with Node.js {{ .matrix_version }}" }}
      
      echo "OS: {{ .matrix_os }}"
      echo "Node Version: {{ .matrix_version }}"
      echo "Project: $PROJECT_NAME"
      
      # Simulate different behavior per OS
      {{ if eq .matrix_os "windows" }}
      echo "Running Windows-specific tests..."
      {{ else if eq .matrix_os "macos" }}
      echo "Running macOS-specific tests..."
      {{ else }}
      echo "Running Linux-specific tests..."
      {{ end }}
      
      # Simulate version-specific behavior
      {{ if eq .matrix_version "16" }}
      echo "Using legacy Node.js features"
      {{ else if eq .matrix_version "20" }}
      echo "Using latest Node.js features"
      {{ else }}
      echo "Using standard Node.js features"
      {{ end }}
      
      {{ success "Test completed for {{ .matrix_os }}/{{ .matrix_version }}" }}

  # Matrix with build dependencies
  build-matrix:
    help: "Build across multiple architectures"
    matrix:
      arch: ["amd64", "arm64"]
      variant: ["alpine", "debian"]
    deps: [setup]
    run: |
      {{ step "Building for {{ .matrix_arch }}/{{ .matrix_variant }}" }}
      
      IMAGE_TAG="${PROJECT_NAME}:{{ .matrix_arch }}-{{ .matrix_variant }}"
      
      echo "Building: $IMAGE_TAG"
      echo "Architecture: {{ .matrix_arch }}"
      echo "Base Image: {{ .matrix_variant }}"
      
      # Simulate Docker build
      echo "docker build --platform linux/{{ .matrix_arch }} -t $IMAGE_TAG -f Dockerfile.{{ .matrix_variant }} ."
      
      {{ success "Build completed: $IMAGE_TAG" }}

  # Non-matrix recipe that matrix recipes can depend on
  setup:
    help: "Setup build environment"
    run: |
      {{ step "Setting up build environment" }}
      echo "Preparing build tools..."
      echo "Validating environment..."
      {{ success "Setup completed" }}

  # Matrix with conditional execution
  deploy-matrix:
    help: "Deploy to multiple environments"
    matrix:
      environment: ["dev", "staging", "prod"]
      region: ["us-east-1", "eu-west-1"]
    run: |
      {{ step "Deploying to {{ .matrix_environment }}/{{ .matrix_region }}" }}
      
      # Skip certain combinations
      {{ if and (eq .matrix_environment "prod") (eq .matrix_region "eu-west-1") }}
      {{ warn "Skipping prod deployment to eu-west-1 (not configured)" }}
      exit 0
      {{ end }}
      
      echo "Environment: {{ .matrix_environment }}"
      echo "Region: {{ .matrix_region }}"
      
      # Environment-specific logic
      {{ if eq .matrix_environment "prod" }}
      {{ warn "Production deployment - extra validation required" }}
      echo "Running production checks..."
      {{ end }}
      
      echo "Deploying $PROJECT_NAME to {{ .matrix_environment }}/{{ .matrix_region }}"
      
      {{ success "Deployment completed" }}

  # Future: Matrix with failure handling (conceptual)
  resilient-matrix:
    help: "Matrix execution with failure handling (future feature)"
    # matrix:
    #   browser: ["chrome", "firefox", "safari"]
    #   resolution: ["1920x1080", "1366x768", "mobile"]
    # failure_policy: "continue"  # continue, fail_fast, retry
    # max_failures: 2
    run: |
      {{ warn "Advanced matrix features not yet implemented" }}
      {{ info "Future syntax would support:" }}
      echo "  - failure_policy: continue|fail_fast|retry"
      echo "  - max_failures: N"
      echo "  - matrix_exclude: [combinations to skip]"
      echo "  - matrix_include: [additional combinations]"
      
      # Current simulation
      {{ step "Simulating matrix execution" }}
      for browser in chrome firefox safari; do
        for resolution in "1920x1080" "1366x768" "mobile"; do
          {{ info "Testing $browser at $resolution" }}
          # Simulate test execution
          sleep 0.5
        done
      done
      {{ success "All matrix combinations completed" }}

  # Show current matrix limitations
  matrix-status:
    help: "Show current matrix implementation status"
    run: |
      {{ step "Matrix Implementation Status" }}
      echo "=================================="
      echo ""
      
      echo "âœ… IMPLEMENTED:"
      echo "  - Basic matrix expansion"
      echo "  - Matrix variable access ({{ .matrix_key }})"
      echo "  - Dependencies with matrix recipes"
      echo "  - Conditional logic within matrix"
      echo ""
      
      echo "ðŸš§ IN PROGRESS:"
      echo "  - Matrix expansion in DAG builder"
      echo "  - Parallel matrix execution"
      echo "  - Matrix result aggregation"
      echo ""
      
      echo "ðŸ”® PLANNED:"
      echo "  - failure_policy options"
      echo "  - matrix_exclude/matrix_include"
      echo "  - Resource limits per matrix job"
      echo "  - Matrix result reporting"
      echo ""
      
      {{ success "Matrix roadmap displayed" }}
