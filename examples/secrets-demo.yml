# Secrets Management Demo
# Shows how to handle sensitive data securely
version: 0.1

# Define secrets with their sources
secrets:
  api_key:
    source: "env://API_KEY"
    required: true
    description: "API key for external service"
  
  db_password:
    source: "env://DATABASE_PASSWORD"
    required: false
    description: "Database password"
  
  deploy_token:
    source: "env://DEPLOY_TOKEN"
    required: true
    description: "Deployment token for CI/CD"

env:
  APP_NAME: "secrets-demo"
  # Regular env vars - not secrets
  LOG_LEVEL: "info"

recipes:
  # Show secrets usage
  show-secrets:
    help: "Show available secrets (safely)"
    run: |
      {{ step "Checking secret availability" }}
      
      echo "Secret Status:"
      {{ if hasSecret "api_key" }}
      echo "  ‚úÖ API Key: Available"
      {{ else }}
      echo "  ‚ùå API Key: Missing"
      {{ end }}
      
      {{ if hasSecret "db_password" }}
      echo "  ‚úÖ DB Password: Available"
      {{ else }}
      echo "  ‚ùå DB Password: Missing"
      {{ end }}
      
      {{ if hasSecret "deploy_token" }}
      echo "  ‚úÖ Deploy Token: Available"
      {{ else }}
      echo "  ‚ùå Deploy Token: Missing"
      {{ end }}
      
      {{ success "Secret status check completed" }}

  # Use secrets in deployment
  deploy:
    help: "Deploy using secrets"
    run: |
      {{ step "Starting secure deployment" }}
      
      # Check required secrets
      {{ if not (hasSecret "api_key") }}
      {{ error "API_KEY environment variable is required" }}
      exit 1
      {{ end }}
      
      {{ if not (hasSecret "deploy_token") }}
      {{ error "DEPLOY_TOKEN environment variable is required" }}
      exit 1
      {{ end }}
      
      {{ info "All required secrets are available" }}
      
      # Use secrets (they won't be logged in plain text)
      echo "Authenticating with API..."
      # In real usage: curl -H "Authorization: Bearer {{ secret "api_key" }}" ...
      echo "API authentication configured"
      
      echo "Configuring deployment token..."
      # In real usage: export DEPLOY_TOKEN="{{ secret "deploy_token" }}"
      echo "Deployment token configured"
      
      {{ if hasSecret "db_password" }}
      echo "Database password configured"
      {{ else }}
      {{ warn "Database password not provided - using default" }}
      {{ end }}
      
      {{ success "Deployment completed securely" }}

  # Show current limitations
  secrets-status:
    help: "Show current secrets implementation status"
    run: |
      {{ step "Secrets Implementation Status" }}
      echo "====================================="
      echo ""
      
      echo "‚úÖ IMPLEMENTED:"
      echo "  - Secret definitions in YAML"
      echo "  - Environment variable sources (env://)"
      echo "  - Required/optional secrets"
      echo "  - Template functions: {{ secret \"name\" }}, {{ hasSecret \"name\" }}"
      echo "  - Secret availability checking"
      echo ""
      
      echo "üöß IN PROGRESS:"
      echo "  - Secret resolution in spec loader"
      echo "  - Runtime secret injection"
      echo "  - Secret masking in logs"
      echo ""
      
      echo "üîÆ PLANNED:"
      echo "  - File-based secrets (file://path)"
      echo "  - HashiCorp Vault integration (vault://path)"
      echo "  - AWS Secrets Manager (aws://secret-name)"
      echo "  - Azure Key Vault (azure://vault/secret)"
      echo "  - Secret rotation and caching"
      echo "  - Audit logging for secret access"
      echo ""
      
      {{ success "Secrets roadmap displayed" }}

  # Test with mock secrets
  test-secrets:
    help: "Test secrets functionality with mock data"
    run: |
      {{ step "Testing secrets with mock data" }}
      
      # Set some test environment variables
      export API_KEY="test-api-key-12345"
      export DEPLOY_TOKEN="test-deploy-token-67890"
      # DATABASE_PASSWORD intentionally not set to test optional secrets
      
      echo "Mock secrets configured for testing"
      
      # This would use the secrets if they were properly resolved
      {{ info "In a real implementation, secrets would be resolved here" }}
      
      echo "Test API Key: ${API_KEY:0:8}..." # Show only first 8 chars
      echo "Test Deploy Token: ${DEPLOY_TOKEN:0:8}..."
      
      {{ success "Secret testing completed" }}
