# Docker Compose Status Example
# Demonstrates the new dockerCompose.IsRunning functionality

recipes:
  status:
    description: "Check Docker Compose service status"
    run: |
      {{ step "Checking Docker Compose status" }}
      
      {{ if dockerCompose.IsRunning }}
      {{ success "Services are running" }}
      {{ info "Running services:" }}
      {{ dockerCompose }} ps
      {{ else }}
      {{ warn "No services are running" }}
      {{ info "Use 'drun start' to start services" }}
      {{ end }}

  start:
    description: "Start Docker Compose services"
    run: |
      {{ step "Starting Docker Compose services" }}
      
      {{ if dockerCompose.IsRunning }}
      {{ info "Services are already running" }}
      {{ dockerCompose }} ps
      {{ else }}
      {{ info "Starting services..." }}
      {{ dockerCompose }} up -d
      {{ success "Services started!" }}
      {{ end }}

  stop:
    description: "Stop Docker Compose services"
    run: |
      {{ step "Stopping Docker Compose services" }}
      
      {{ if dockerCompose.IsRunning }}
      {{ info "Stopping running services..." }}
      {{ dockerCompose }} down
      {{ success "Services stopped!" }}
      {{ else }}
      {{ info "No services are running" }}
      {{ end }}

  restart:
    description: "Restart Docker Compose services"
    run: |
      {{ step "Restarting Docker Compose services" }}
      
      {{ if dockerCompose.IsRunning }}
      {{ info "Stopping running services..." }}
      {{ dockerCompose }} down
      {{ end }}
      
      {{ info "Starting services..." }}
      {{ dockerCompose }} up -d
      
      {{ success "Services restarted!" }}

  smart-deploy:
    description: "Smart deployment that checks service status"
    run: |
      {{ step "Smart Docker Compose deployment" }}
      
      # Build the application first
      {{ info "Building application..." }}
      {{ dockerCompose }} build
      
      # Check if services are running and handle accordingly
      {{ if dockerCompose.IsRunning }}
      {{ info "Services are running - performing rolling update" }}
      {{ dockerCompose }} up -d --force-recreate --no-deps
      {{ else }}
      {{ info "No services running - starting fresh" }}
      {{ dockerCompose }} up -d
      {{ end }}
      
      {{ success "Deployment completed!" }}
      {{ info "Service status:" }}
      {{ dockerCompose }} ps

  ensure-stopped:
    description: "Ensure services are stopped using negation"
    run: |
      {{ step "Ensuring services are stopped" }}
      
      # Using negation to check if services are NOT running
      {{ if not dockerCompose.IsRunning }}
      {{ success "Services are already stopped" }}
      {{ else }}
      {{ info "Services are running - stopping them..." }}
      {{ dockerCompose }} down
      {{ success "Services stopped!" }}
      {{ end }}

  start-if-needed:
    description: "Start services only if they're not already running"
    run: |
      {{ step "Starting services if needed" }}
      
      # Start only if not running (using negation)
      {{ if not dockerCompose.IsRunning }}
      {{ info "Services not running - starting them..." }}
      {{ dockerCompose }} up -d
      {{ success "Services started!" }}
      {{ else }}
      {{ info "Services are already running" }}
      {{ dockerCompose }} ps
      {{ end }}
